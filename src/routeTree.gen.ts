/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutMainLayoutIndexRouteImport } from './routes/_layout/mainLayout/index'
import { Route as LayoutMainLayoutUrlsIndexRouteImport } from './routes/_layout/mainLayout/urls/index'
import { Route as LayoutMainLayoutFilesIndexRouteImport } from './routes/_layout/mainLayout/files/index'

const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutMainLayoutIndexRoute = LayoutMainLayoutIndexRouteImport.update({
  id: '/mainLayout/',
  path: '/mainLayout/',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutMainLayoutUrlsIndexRoute =
  LayoutMainLayoutUrlsIndexRouteImport.update({
    id: '/mainLayout/urls/',
    path: '/mainLayout/urls/',
    getParentRoute: () => LayoutRoute,
  } as any)
const LayoutMainLayoutFilesIndexRoute =
  LayoutMainLayoutFilesIndexRouteImport.update({
    id: '/mainLayout/files/',
    path: '/mainLayout/files/',
    getParentRoute: () => LayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/mainLayout': typeof LayoutMainLayoutIndexRoute
  '/mainLayout/files': typeof LayoutMainLayoutFilesIndexRoute
  '/mainLayout/urls': typeof LayoutMainLayoutUrlsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/mainLayout': typeof LayoutMainLayoutIndexRoute
  '/mainLayout/files': typeof LayoutMainLayoutFilesIndexRoute
  '/mainLayout/urls': typeof LayoutMainLayoutUrlsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/_layout/mainLayout/': typeof LayoutMainLayoutIndexRoute
  '/_layout/mainLayout/files/': typeof LayoutMainLayoutFilesIndexRoute
  '/_layout/mainLayout/urls/': typeof LayoutMainLayoutUrlsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/mainLayout' | '/mainLayout/files' | '/mainLayout/urls'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/mainLayout' | '/mainLayout/files' | '/mainLayout/urls'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/_layout/mainLayout/'
    | '/_layout/mainLayout/files/'
    | '/_layout/mainLayout/urls/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/mainLayout/': {
      id: '/_layout/mainLayout/'
      path: '/mainLayout'
      fullPath: '/mainLayout'
      preLoaderRoute: typeof LayoutMainLayoutIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/mainLayout/urls/': {
      id: '/_layout/mainLayout/urls/'
      path: '/mainLayout/urls'
      fullPath: '/mainLayout/urls'
      preLoaderRoute: typeof LayoutMainLayoutUrlsIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/mainLayout/files/': {
      id: '/_layout/mainLayout/files/'
      path: '/mainLayout/files'
      fullPath: '/mainLayout/files'
      preLoaderRoute: typeof LayoutMainLayoutFilesIndexRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutMainLayoutIndexRoute: typeof LayoutMainLayoutIndexRoute
  LayoutMainLayoutFilesIndexRoute: typeof LayoutMainLayoutFilesIndexRoute
  LayoutMainLayoutUrlsIndexRoute: typeof LayoutMainLayoutUrlsIndexRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutMainLayoutIndexRoute: LayoutMainLayoutIndexRoute,
  LayoutMainLayoutFilesIndexRoute: LayoutMainLayoutFilesIndexRoute,
  LayoutMainLayoutUrlsIndexRoute: LayoutMainLayoutUrlsIndexRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
